vim.g.mapleader  = " "

local keymap = vim.keymap

keymap.set("t", "<C-q>", "<ESC>:q<cr>")

keymap.set("v", "x", '"_x')
keymap.set("v", "p", 'P')
keymap.set("v", "<leader>h", "^")
keymap.set("v", "<leader>l", "$")
keymap.set("v", "<leader>ce", ":CopilotChatExplain<CR>")
keymap.set("v", "<leader>cr", ":CopilotChatReview<CR>")
keymap.set("v", "<leader>co", ":CopilotChatOpen<CR>")
keymap.set("v", "<leader>ct", ":CopilotChatTests<CR>")
keymap.set("v", "<leader>cc", ":CopilotChatCommit<CR>")
keymap.set("v", "<leader>sf", ":! npx sql-formatter-cli<CR>")

keymap.set("i", "jj", "<ESC>")
keymap.set("i", "<C-f>", "<Right>")
keymap.set("i", "<C-b>", "<Left>")
keymap.set("i", "<C-p>", "<Up>")
keymap.set("i", "<C-n>", "<Down>")
keymap.set("i", "<C-a>", "<C-o>^")
keymap.set("i", "<C-e>", "<C-o>$")
keymap.set('i', '<C-j>', '<Plug>(copilot-next)')
keymap.set('i', '<C-k>', '<Plug>(copilot-previous)')
keymap.set('i', '<C-l>', '<Plug>(copilot-suggest)')

keymap.set("n", "<C-q>", ":q<cr>")
keymap.set("n", "<leader>h", "^")
keymap.set("n", "<leader>l", "$")
keymap.set("n", "<leader>w", ":w<CR>")
keymap.set("n", "<leader>r", "<C-w>x")
keymap.set("n", "cp", ":Copypath<cr>")
keymap.set("n", "<CR>", "a<Return><Esc>^k")
keymap.set("n", "<C-n>", ":nohl<CR>")
keymap.set("n", "<leader>gr", ":lua print(vim.inspect(vim.treesitter.get_captures_at_cursor(0)))<CR>")
keymap.set("n", "n", "nzz")
keymap.set("n", "N", "Nzz")
keymap.set("n", "*", "*zz")
keymap.set("n", "#", "#zz")
keymap.set("n", "<leader>e", ":e<cr>")
keymap.set("n", "<C-[>", ":bprev<CR>")
keymap.set("n", "<C-]>", ":bnext<CR>")
keymap.set("n", "<leader>rp", ":%s/")
keymap.set("n", "x", '"_x')
keymap.set("n", "<leader>sl", "<C-w>v")
keymap.set("n", "<leader>sj", "<C-w>s")
keymap.set("n", "<leader>sx", ":close<CR>")
keymap.set("n", "<leader>=", "<C-w>15>")
keymap.set("n", "<leader>-", "<C-w>15<")
keymap.set("n", "<leader>z", ":MaximizerToggle<CR>")
keymap.set("n", "<leader>tt", ":NvimTreeToggle<CR>")
keymap.set("n", "<leader>tr", ":NvimTreeRefresh<CR>")
keymap.set("n", "<leader>tx", ":NvimTreeCollapse<CR>")
keymap.set("n", "<leader>pp", "<cmd>Telescope frecency workspace=CWD<cr>")
keymap.set("n", "<leader>ff", "<cmd>lua require('telescope').extensions.live_grep_args.live_grep_args()<CR>")
keymap.set("n", "<leader>fg", "<cmd>Telescope git_bcommits<cr>")
keymap.set("n", "<leader>gb", "<cmd>Git blame<cr>")
keymap.set("n", "<leader>gg", "<cmd>:OpenLazyGit<cr>")
keymap.set("n", "gd", "<cmd>Lspsaga peek_definition<CR>")
keymap.set("n", "go", "<cmd>Lspsaga goto_definition<CR>")
keymap.set("n", "rn", "<cmd>Lspsaga rename<CR>")
keymap.set("n", "<leader>dv", ":DiffviewOpen")
keymap.set("n", "<leader>mt", ":MinitestTeleport<CR>")
keymap.set("n", "<leader>ma", ":MinitestRunAll<CR>")
keymap.set("n", "<leader>mn", ":MinitestRunNearest<CR>")
keymap.set("n", "<leader>cp", ":Copilot panel<CR>")
keymap.set("n", "<Tab>", ":BufferNext<CR>")
keymap.set("n", "<S-Tab>", ":BufferPrevious<CR>")
keymap.set("n", "<S-x>", ":BufferClose<CR>")
keymap.set("n", "<leader>,", ":MarkdownPreview<CR>")
keymap.set('n', '<leader>gl', '<cmd>lua require"gitlinker".get_buf_range_url("n", {action_callback = require"gitlinker.actions".open_in_browser})<cr>', {silent = true})
keymap.set('v', '<leader>gl', '<cmd>lua require"gitlinker".get_buf_range_url("v", {action_callback = require"gitlinker.actions".open_in_browser})<cr>', {})
